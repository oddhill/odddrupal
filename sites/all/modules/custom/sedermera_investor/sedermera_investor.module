<?php

/**
 * @file sedermera_investor.module
 * Main module file for the Sedermera Investor module.
 */

/**
 * Implements hook_menu().
 */
function sedermera_investor_menu() {
  $items['investerare/skapa'] = array(
    'title' => 'L채gg till investerare',
    'page callback' => 'sedermera_investor_create_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_admin_paths_alter().
 */
function sedermera_investor_admin_paths_alter(&$paths) {
  // Don't treat the add forms for investor bundles as administrative pages, in
  // order to use the sites default theme rather than the administration theme.
  $paths['admin/structure/entity-type/investor/*/add'] = FALSE;
}

/**
 * Page callback for the investerare/skapa path.
 *
 * This will generate a page that looks like the node/add page.
 *
 * @see node_add_page()
 */
function sedermera_investor_create_page() {
  // Get the entity info for the investor entity type.
  $investor_info = entity_get_info('investor');

  // Setup the descriptions for the different bundles. The ECK module doesn't
  // support descriptions, like node types. This is a way to mimic the same
  // behavior for this particular page.
  $descriptions = array(
    'company' => 'L채gg till ett nytt investmentbolag. Dessa kan kopplas till flera 채gare.',
    'person' => 'L채gg till en ny privatperson.',
  );

  // Iterate through the bundles, add add a link for each bundle. This will be
  // used to genereate the output.
  foreach ($investor_info['bundles'] as $bundle_name => $bundle_info) {
    $items[] = array(
      'title' => $bundle_info['label'],
      'href' => "admin/structure/entity-type/investor/{$bundle_name}/add",
      'description' => isset($descriptions[$bundle_name]) ? $descriptions[$bundle_name] : '',
      'localized_options' => array(),
    );
  }

  // Return a list which looks like the node add list. This isn't actually
  // nodes, but it's convinient to use the same theme function since we'd like
  // to generate a similar list.
  return theme('node_add_list', array('content' => $items));
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function sedermera_investor_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  // Alter the exposed form for the investor page.
  if ($form['#id'] == 'views-exposed-form-investors-page') {
    // Get the country values from the database. We'll use a regular DB Query in
    // order to improve performance.
    $available_countries = db_query("SELECT DISTINCT field_shared_address_country FROM {field_data_field_shared_address}")->fetchAllKeyed();

    // Remove the options that aren't stored in the database.
    $form['country']['#options'] = array_intersect_key($form['country']['#options'], $available_countries);

    // Disable access to the country field and remove the label if the options
    // are empty.
    if (empty($form['country']['#options'])) {
      $form['country']['#access'] = FALSE;
      unset($form['#info']['filter-field_shared_address_country']);
    }

    // Get the industry values from the database. We'll use a regular DB Query
    // here as well, for the same reason as above...
    $available_industries = db_query("SELECT DISTINCT field_shared_industries_tid FROM {field_data_field_shared_industries}")->fetchAllKeyed();

    // Remove the options that aren't stored in the database, and disable access
    // to the field if the options are empty.
    $form['industries']['#options'] = array_intersect_key($form['industries']['#options'], $available_industries);

    // Disable access to the industries field and remove the label if the
    // options are empty.
    if (empty($form['industries']['#options'])) {
      $form['industries']['#access'] = FALSE;
      unset($form['#info']['filter-field_shared_industries_tid']);
    }
  }
}
