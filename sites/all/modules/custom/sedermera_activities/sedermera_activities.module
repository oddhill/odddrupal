<?php

/**
 * @file sedermera_activities.module
 * Main module file for the Sedermera Activities module.
 */

/**
 * Implements hook_entity_insert().
 */
function sedermera_activities_entity_insert($entity, $type) {
  switch ($type) {
    case 'offer':
      // Create a message for the new offer.
      sedermera_activities_create_message($entity, 'offer_created');
      break;
  }
}

/**
 * Implements hook_entity_update().
 */
function sedermera_activities_entity_update($entity, $type) {
  switch ($type) {
    case 'offer':
      // Create messages if the interested value has been changed.
      if (sedermera_activities_offer_field_has_changed($entity, 'field_offer_interested')) {
        if (entity_metadata_wrapper('offer', $entity)->field_offer_interested->value()) {
          // The offer has been marked as interested.
          sedermera_activities_create_message($entity, 'offer_interested');
        }
        else {
          // The offer has been marked as uninterested.
          sedermera_activities_create_message($entity, 'offer_uninterested');
        }
      }

      // Create a message if the offer has been contacted.
      if (sedermera_activities_offer_field_has_value($entity, 'field_offer_first_contact') && sedermera_activities_offer_field_has_changed($entity, 'field_offer_first_contact')) {
        sedermera_activities_create_message($entity, 'offer_first_contact');
      }

      // Create a message if the guaranteed amount has been changed.
      if (sedermera_activities_offer_field_has_changed($entity, 'field_offer_amount_guar')) {
        sedermera_activities_create_message($entity, 'offer_guar_changed');
      }

      // Create a message if the committed amount has been changed.
      if (sedermera_activities_offer_field_has_changed($entity, 'field_offer_amount')) {
        sedermera_activities_create_message($entity, 'offer_comm_changed');
      }

      // Create a message if the offer has been signed.
      if (sedermera_activities_offer_field_has_value($entity, 'field_offer_signed') && sedermera_activities_offer_field_has_changed($entity, 'field_offer_signed')) {
        sedermera_activities_create_message($entity, 'offer_signed');
      }

      // Create a message if the status has been changed.
      if (sedermera_activities_offer_field_has_changed($entity, 'field_offer_status')) {
        sedermera_activities_create_message($entity, 'offer_status');
      }
      break;
  }
}

/**
 * Creates a message for an offer.
 *
 * @param obj $offer
 *   The offer entity that has been created.
 * @param string $type
 *   The message type.
 * @param array $arguments
 *   An array with values that will be replaced when the message is displayed.
 *
 * @see message_create()
 */
function sedermera_activities_create_message($offer, $type) {
  // Wrap the offer in order to access its values.
  $offer_wrapper = entity_metadata_wrapper('offer', $offer);

  // Create the message.
  $message = message_create($type);
  $message_wrapper = entity_metadata_wrapper('message', $message);

  // Set the message values.
  $message_wrapper->field_shared_offer->set($offer);
  $message_wrapper->field_shared_cap_rais->set($offer_wrapper->field_offer_cap_rais->value());
  $message_wrapper->field_shared_investor->set($offer_wrapper->field_offer_investor->value());

  // Save the message.
  $message_wrapper->save();
}

/**
 * Checks whether or not the specified field has a value.
 *
 * @param obj $offer
 *   The offer entity.
 * @param string $field
 *   The name of the field.
 *
 * @return bool
 *   TRUE if the field has a value, FALSE otherwise.
 */
function sedermera_activities_offer_field_has_value($offer, $field) {
  $value = entity_metadata_wrapper('offer', $offer)->{$field}->value();
  return !empty($value);
}

/**
 * Checks whether or not the specified field has been changed.
 *
 * @param obj $offer
 *   The offer entity.
 * @param string $field
 *   The name of the field.
 *
 * @return bool
 *   TRUE if the field has been changed, FALSE otherwise.
 */
function sedermera_activities_offer_field_has_changed($offer, $field) {
  if (!isset($offer->original)) {
    // There is no original entity attached to this offer, assume unchanged.
    return FALSE;
  }

  // Wrap both the offer and the unchanged offer.
  $wrapper = entity_metadata_wrapper('offer', $offer);
  $wrapper_original = entity_metadata_wrapper('offer', $offer->original);

  // Return TRUE if the value has been changed.
  return $wrapper->{$field}->value() != $wrapper_original->{$field}->value();
}
