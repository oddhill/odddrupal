<?php

/**
 * @file sedermera_offer.module
 * Main module file for the Sedermera Offer module
 */

/**
 * Implements hook_menu()
 */
function sedermera_transaction_menu() {
  $items['node/%/intressenter'] = array(
    'title' => 'Intressenter',
    'page callback' => 'sedermera_transaction_intresent',
    'page arguments' => array(1),
    'access callback' => 'sedermera_transaction_offer_access',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  return $items;
}

/**
 * Checks if the current node is of type offer
 * @return boolean TRUE if ok else FALSE
 */
function sedermera_transaction_offer_access() {
  // Load node
  $node = node_load(arg(1));

  // Check if node is of type offer
  if ($node->type === 'offer') {
    return TRUE;
  }

  return FALSE;
}

/**
 * Render intresent table
 */
function sedermera_transaction_intresent() {
  // Load all transaction ids corresponding to the current offer
  $transactions = get_transactions(arg(1));

  // If no transactions exists for the offer present empty table with no content
  if (empty($transactions)) {
    drupal_set_title('Det finns inga transaktioner');
    return array(
      '#theme' => 'table',
      '#header' => array(),
      '#rows' => NULL,
      '#prefix' => '<div class="table-wrapper">',
      '#suffix' => '</div>',
    );
  }
  else {
    // Load the current offer
    $offer = node_load(arg(1));

    // Array of active investment types used in the offer
    $type_investment = array(
      'fe_sign' => !empty($offer->field_offer_type_fe_sign),
      'fe_warr' => !empty($offer->field_offer_type_fe_warrant),
      'le_sign' => !empty($offer->field_offer_type_le_sign),
      'le_warr' => !empty($offer->ffield_offer_type_le_warrant),
      'pp_sign' => !empty($offer->field_offer_type_pp_sign),
      're_sign' => !empty($offer->field_offer_type_re_sign),
      'bl_sum'  => !empty($offer->field_offer_type_bl_sum),
      'bp_sum ' => !empty($offer->field_offer_type_bp_sum),
    );

    // Arrays holding the content used to build the table
    $header = array();
    $rows = array();

    // Generate the table header
    generate_header_row($header, $type_investment);

    // Generate a group for each contact person and its investors
    foreach ($transactions as $transaction_nid) {
      // Load the transaction
      $transaction = node_load($transaction_nid);

      // Generate contactperson head row
      generate_contact_person_head_row($rows, $transaction, $type_investment);

      // Generate the investor rows with editable fields
      foreach ($transaction->field_transaction_investor as $investor_transactions) {
        generate_investor_rows($rows, $investor_transactions, $type_investment);
      }

      // Generate the contactperson sum row
      generate_sum_row($rows, $type_investment);
    }

    // Generate rendarable array for the table and return it.
    return array(
      '#theme' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#prefix' => '<div class="table-wrapper">',
      '#suffix' => '</div>',
    );
  }
}

/**
 * Creates the header row for the table
 * @param  array &$header The array to store the table header content in
 * @param  array $type_investment The active investment types used in the offer
 */
function generate_header_row(&$header, $type_investment) {
  // Collapsible column
  $header[] = array(
    'class' => array('table-head', 'Collapsible-head')
  );

  // Name column
  $header[] = array(
    'data' => 'Kontaktperson',
    'class' => array('table-head')
  );

  // Dropdown column
  $header[] = array(
    'data' => '',
    'class' => array('table-head')
  );

  // Teckningsförbindelse if Företrädesemission column
  if ($type_investment['fe_sign']) {
    $header[] = array(
      'data' => 'Teckningsförbindelse',
      'class' => array('table-head')
    );
  }

  // Garantiåtagande if Företrädesemission column
  if ($type_investment['fe_warr']) {
    $header[] = array(
      'data' => 'Garantiåtagande',
      'class' => array('table-head')
    );
  }

  // Teckningsförbindelse if Listningsemission column
  if ($type_investment['le_sign']) {
    $header[] = array(
      'data' => 'Teckningsförbindelse',
      'class' => array('table-head')
    );
  }

  // Garantiåtagande if Listningsemission column
  if ($type_investment['le_warr']) {
    $header[] = array(
      'data' => 'Garantiåtagande',
      'class' => array('table-head')
    );
  }

  // Teckningsförbindelse if Private placement column
  if ($type_investment['pp_sign']) {
    $header[] = array(
      'data' => 'Teckningsförbindelse',
      'class' => array('table-head')
    );
  }

  // Teckningsförbindelse if Riktad emission column
  if ($type_investment['re_sign']) {
    $header[] = array(
      'data' => 'Teckningsförbindelse',
      'class' => array('table-head')
    );
  }

  // Sum if Brygglån column
  if ($type_investment['bl_sum']) {
    $header[] = array(
      'data' => 'Brygglån',
      'class' => array('table-head')
    );
  }

  // Sum if Blockpost column
  if ($type_investment['bp_sum']) {
    $header[] = array(
      'data' => 'Blockpost',
      'class' => array('table-head')
    );
  }

  // Summation column
  $header[] = array(
    'data' => 'Summa',
    'class' => array('table-head')
  );

  // Control column
  $header[] = array(
    'data' => '',
    'class' => array('table-head')
  );

  // To control column
  $header[] = array(
    'data' => 'Till kontroll',
    'class' => array('table-head')
  );
}

/**
 * Creates the group header row for the contact person
 * @param  array &$rows The array to store the table rows content in
 * @param  drupal_node $transaction Node containing the transaction information
 * @param  array $type_investment The active investment types used in the offer
 */
function generate_contact_person_head_row(&$rows, $transaction, $type_investment) {
  $transaction_wrap = entity_metadata_wrapper('node', $transaction);
  $person = $transaction_wrap->field_transaction_person->value();
  $investors = db_query("SELECT n.nid AS nid, n.title AS name FROM {node} AS n INNER JOIN field_data_field_shared_cont_pers AS u ON (n.nid = u.entity_id) WHERE u.field_shared_cont_pers_target_id = :tid", array(':tid' => $person->nid))->fetchAll();

  // If no investors for the contact person create simple string
  if (empty($investors)) {
    $drop_down = array(
      '#prefix' => 'Inga avtalsparter',
      );
  }
  else {
    $options = array(
        '#prefix' => '<div class="dropdown">',
        '#suffix' => '</div>',
      );

    // Add checkbox for each investor connected to the contact person
    // Mark as selected if already selected
    foreach ($investors as $investor) {
      $tf = FALSE;
      $attributes = array();

      foreach ($transaction_wrap->field_transaction_investor->value() as $node) {
        $res = db_query("SELECT COUNT(*) AS tf FROM {field_data_field_transaction_ap_ap} WHERE entity_id = :eid AND field_transaction_ap_ap_target_id = :tid", array(':eid' => $node->nid, ':tid' => $investor->nid))->fetchAssoc();

        if ($res['tf'] == 1) {
          $tf = TRUE;
          $attributes = array(
            'checked' => 'checked',
            'disabled' => 'disabled',
          );
          break;
        }
      }

      $options[$investor->nid] = array(
        '#type' => 'checkbox',
        '#title' => $investor->name,
        '#default_value' => $tf,
        '#attributes' => $attributes,
      );
    }

    // Create drop_down menu for contact person
    $drop_down = array(
      '#type' => 'checkboxes',
      '#prefix' => '<div class="select-container partners">',
      '#suffix' => '</div>',
      'select' => array(
        '#markup' => '<div class="select">Avtalspartners</div>',
      ),
      'options' => $options,
    );
  }

  $rows[] = array();
  $row = count($rows) - 1;

  // Collapsible column
  $rows[$row][] = array(
    'class' => 'collapsible-head',
  );

  // Name column
  $rows[$row][] = array(
    'data' => $person->title,
  );

  // Dropdown column
  $rows[$row][] = array(
    'data' => $drop_down,
  );

  $sum = 0;

  // Teckningsförbindelse if Företrädesemission column
  if ($type_investment['fe_sign']) {
    $sum += $transaction_wrap->field_transaction_fe_sign->value();
    $field = field_view_field('node', $transaction, 'field_transaction_fe_sign',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));
    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Garantiåtagande if Företrädesemission column
  if ($type_investment['fe_warr']) {
    $sum += $transaction_wrap->field_transaction_fe_warant->value();
    $field = field_view_field('node', $transaction, 'field_transaction_fe_warant',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Teckningsförbindelse if Listningsemission column
  if ($type_investment['le_sign']) {
    $sum += $transaction_wrap->field_transaction_le_sign->value();
    $field = field_view_field('node', $transaction, 'field_transaction_le_sign',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Garantiåtagande if Listningsemission column
  if ($type_investment['le_warr']) {
    $sum += $transaction_wrap->field_transaction_le_warrant->value();
    $field = field_view_field('node', $transaction, 'field_transaction_le_warrant',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Teckningsförbindelse if Private Placement column
  if ($type_investment['pp_sign']) {
    $sum += $transaction_wrap->field_transaction_pp_sign->value();
    $field = field_view_field('node', $transaction, 'field_transaction_pp_sign',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Teckningsförbindelse if Riktad emission column
  if ($type_investment['re_sign']) {
    $sum += $transaction_wrap->field_transaction_re_sign->value();
    $field = field_view_field('node', $transaction, 'field_transaction_re_sign',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Sum if Brygglån column
  if ($type_investment['bl_sum']) {
    $sum += $transaction_wrap->field_transaction_bridging->value();
    $field = field_view_field('node', $transaction, 'field_transaction_bridging',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Sum if Blockpost column
  if ($type_investment['bp_sum']) {
    $sum += $transaction_wrap->field_transaction_block->value();
    $field = field_view_field('node', $transaction, 'field_transaction_block',
          array(
            'label'=>'hidden',
            'settings' => array(
              'thousand_separator' => '\'',
            ),
          ));

    $rows[$row][] = array(
      'data' => render($field),
    );
  }

  // Summation column
  $rows[$row][] = array(
    'data' => number_format($sum, 0, "", "'") . " :-",
  );

  // Control column
  $field = field_view_field('node', $person, 'field_user_id_ctrl',
        array(
          'label'=>'hidden',
          'type' => 'sedermera_verification_status',
        ));
  $rows[$row][] = array(
    'data' => render($field),
  );

  // To control column
  $done = 0;
  $count = 0;

  foreach ($transaction->field_transaction_investor as $value) {
    foreach ($value as $val) {
      $result = db_query("SELECT field_transaction_ap_ctrl_value AS value FROM {field_data_field_transaction_ap_ctrl} WHERE entity_id = :eid", array(':eid' => $val['target_id']))->fetchAll();
      $done += $result[0]->value;
      $count++;
    }
  }

  $rows[$row][] = array(
    'data' => ($done == 0 && $count == 0) ? "0 valda" : $done ."/" . $count . " klara",
  );
}

/**
 * Create the investor rows with editable fields for each investor connected to
 * the contactpersons transaction
 * @param  array &$rows The array to store the table rows content in
 * @param  array $investor_transactions List of investor transactions for the
 * contact person
 * @param  array $type_investment The active investment types used in the offer
 */
function generate_investor_rows(&$rows, $investor_transactions, $type_investment) {
  foreach ($investor_transactions as $investor) {
    $transaction_ap = node_load($investor['target_id']);
    $transaction_ap_wrap = entity_metadata_wrapper('node', $transaction_ap);

    // Get investor from transaction
    $investor = $transaction_ap_wrap->field_transaction_ap_ap->value();

    $rows[] = array();
    $row = count($rows) - 1;

    // Collapsible column
    $rows[$row][] = array(
      'class' => 'collapsible-row',
    );

    // Name column
    $rows[$row][] = array(
      'data' => $investor->title,
    );

    // Dropdown column
    $rows[$row][] = array(
      'data' => '',
    );

    // Teckningsförbindelse if Företrädesemission column
    if ($type_investment['fe_sign']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_fe_sign',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Garantiåtagande if Företrädesemission column
    if ($type_investment['fe_warr']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_fe_warrant',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Teckningsförbindelse if Listningsemission column
    if ($type_investment['le_sign']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_le_sign',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Garantiåtagande if Listningsemission column
    if ($type_investment['le_warr']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_le_warrant',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Teckningsförbindelse if Private placement column
    if ($type_investment['pp_sign']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_pp_sign',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Teckningsförbindelse if Riktad emission column
    if ($type_investment['re_sign']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_re_sign',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Sum if Brygglån column
    if ($type_investment['bl_sum']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_bridging',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Sum if Blockpost column
    if ($type_investment['bp_sum']) {
      $field = field_view_field('node', $transaction_ap, 'field_transaction_ap_block',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));
      $rows[$row][] = array(
        'data' => render($field),
      );
    }

    // Summation column
    $rows[$row][] = array(
      'data' => "SUM_ROW",
    );

    // Control column
    $investor_view_full = node_view($investor);
    $rows[$row][] = array(
      'data' => render($investor_view_full['verification_status']),
    );

    // To control column
    if ($transaction_ap_wrap->field_transaction_ap_ctrl->value()) {
      $rows[$row][] = array(
        'data' => '<span class="to-check-ctrl"></span> kontrollera',
      );
    }
    else {
      $to_ctrl = field_view_field('node', $transaction_ap, 'field_transaction_ap_ctrl',
            array(
              'label'=>'hidden',
              'type' => 'editable',
            ));

      $rows[$row][] = array(
        'data' => render($to_ctrl),
      );
    }
  }
}

/**
 * Generates a summation row for the group
 * @param  array &$rows The array to store the table rows content in
 * @param  array $type_investment The active investment types used in the offer
 */
function generate_sum_row(&$rows, $type_investment) {
  $rows[] = array();
  $row = count($rows) - 1;

  // Collapsible column
  $rows[$row][] = array(
    'data' => '',
    'class' => array('sum-row', 'collapsible-row'),
  );

  // Name column
  $rows[$row][] = array(
    'data' => '',
    'class' => array('sum-row'),
  );

  // Dropdown column
  $rows[$row][] = array(
    'data' => '<strong>Summa kontaktperson:</strong>',
    'class' => array('sum-row'),
  );

  // Teckningsförbindelse if Företrädesemission column
  if ($type_investment['fe_sign']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Garantiåtagande if Företrädesemission column
  if ($type_investment['fe_warr']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Teckningsförbindelse if Listningsemission column
  if ($type_investment['le_sign']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Garantiåtagande if Listnigsemission column
  if ($type_investment['le_warr']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Teckningsförbindelse if Private Placement column
  if ($type_investment['pp_sign']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Teckningsförbindelse if Riktat emission column
  if ($type_investment['re_sign']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Sum if Brygglån column
  if ($type_investment['bl_sum']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Sum if Blockpost column
  if ($type_investment['bp_sum']) {
    $rows[$row][] = array(
      'data' => 'SUM_COL',
      'class' => array('sum-row'),
    );
  }

  // Summation column
  $rows[$row][] = array(
    'data' => 'SUM_TOT',
    'class' => array('sum-row'),
  );

  // Control column
  $rows[$row][] = array(
    'data' => '',
    'class' => array('sum-row'),
  );

  // To control column
  $rows[$row][] = array(
    'data' => '',
    'class' => array('sum-row'),
  );
}

/**
 * Get transactions corresponding to an offer
 * @param  integer $nid The offer id
 * @return array List of transaction ids
 */
function get_transactions($nid) {
  $result = db_query("SELECT entity_id AS nid FROM {field_data_field_transaction_offer} WHERE field_transaction_offer_target_id = :nid", array(':nid' => $nid))->fetchAllAssoc('nid');
  return array_keys($result);
}
