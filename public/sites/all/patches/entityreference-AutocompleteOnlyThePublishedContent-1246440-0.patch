diff --git a/entityreference.module b/entityreference.module
index bdcb562..0b0e17c 100644
--- a/entityreference.module
+++ b/entityreference.module
@@ -1051,8 +1051,26 @@ function entityreference_autocomplete_callback_get_matches($type, $field, $insta
     // Get an array of matching entities.
     $entity_labels = $handler->getReferencableEntities($tag_last, $instance['widget']['settings']['match_operator'], 10);
 
+    // *******************CUSTOM CODE ALTERWAY*********************
+    // Show only published content in the autocomplete output
+    $node_types = array_keys($entity_labels);
+    foreach ($node_types as $type) {
+      $nids = array_keys($entity_labels[$type]);
+      $workflow_entity_labels = array();
+      foreach ($nids as $nid) {
+        $node_entity = node_load($nid);
+        if (isset($node_entity)) {
+          if ($node_entity->status == 1) {
+            $workflow_entity_labels[$type][$nid] = $node_entity->title;
+          }
+        }
+        else{
+          $workflow_entity_labels = $entity_labels;
+        }
+      }
+    }
     // Loop through the products and convert them into autocomplete output.
-    foreach ($entity_labels as $values) {
+    foreach ($workflow_entity_labels as $values) {
       foreach ($values as $entity_id => $label) {
         $key = "$label ($entity_id)";
         // Strip things like starting/trailing white spaces, line breaks and tags.
@@ -1094,6 +1112,7 @@ function entityreference_field_formatter_info() {
       'settings' => array(
         'view_mode' => 'default',
         'links' => TRUE,
+        'use_content_language' => TRUE,
       ),
     ),
   );
@@ -1136,6 +1155,12 @@ function entityreference_field_formatter_settings_form($field, $instance, $view_
       '#title' => t('Show links'),
       '#default_value' => $settings['links'],
     );
+
+    $element['use_content_language'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Use current content language'),
+      '#default_value' => $settings['use_content_language'],
+    );
   }
 
   return $element;
@@ -1162,6 +1187,7 @@ function entityreference_field_formatter_settings_summary($field, $instance, $vi
     }
     $summary[] = t('Rendered as @mode', array('@mode' => $view_mode_label));
     $summary[] = !empty($settings['links']) ? t('Display links') : t('Do not display links');
+    $summary[] = !empty($settings['use_content_language']) ? t('Use current content language') : t('Use field language');
   }
 
   return implode('<br />', $summary);
@@ -1262,6 +1288,9 @@ function entityreference_field_formatter_view($entity_type, $entity, $field, $in
         if ($depth > 20) {
           throw new EntityReferenceRecursiveRenderingException(t('Recursive rendering detected when rendering entity @entity_type(@entity_id). Aborting rendering.', array('@entity_type' => $entity_type, '@entity_id' => $item['target_id'])));
         }
+        if (!empty($settings['use_content_language']) && !empty($GLOBALS['language_content']->language)) {
+          $langcode = $GLOBALS['language_content']->language;
+        }
 
         $entity = clone $item['entity'];
         unset($entity->content);
