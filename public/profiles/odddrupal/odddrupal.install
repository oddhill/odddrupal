<?php
/**
 * @file
 * Installation and update instructions for sites using Odd Drupal.
 */

/**
 * Implements hook_instal().
 */
function odddrupal_install() {
  require_once drupal_get_path('profile', 'odddrupal') . '/odddrupal.install.inc';

  // Configure text formats and Wysiwyg settings.
  odddrupal_text_formats();

  // Configure the global locale settings.
  odddrupal_locale_settings_global();
  // Try to find specific locale settings for the chosen language, and set them
  // as well.
  $function = 'odddrupal_locale_settings_' . $_GET['locale'];
  if (function_exists($function)) {
    $function();
  }

  // Configure Themekey rules.
  odddrupal_themekey_rules();

  // Set up the roles, users and permissions.
  odddrupal_roles_users();

  // Set various variables.
  odddrupal_set_variables();
}

/**
 * Enable the new custom module, Seducing mail.
 */
function odddrupal_update_7101() {
  if (!module_exists('seducing_mail')) {
    module_enable(array('seducing_mail'));
  }
}

/**
 * Enable the new contrib module, Module Filter.
 */
function odddrupal_update_7102() {
  if (!module_exists('module_filter')) {
    module_enable(array('module_filter'));
  }
}

/**
 * Disable Administration language.
 */
function odddrupal_update_7103() {
  if (module_exists('admin_language')) {
    module_disable(array('admin_language'));
    admin_language_uninstall();
  }
}

/**
 * Enable Update status module.
 */
function odddrupal_update_7104() {
  if (!module_exists('update')) {
    module_enable(array('update'));
  }
}

/**
 * Enable Libraries API module.
 */
function odddrupal_update_7105() {
  if (!module_exists('libraries')) {
    module_enable(array('libraries'));
  }
}

/**
 * Enable Poolbar module.
 */
function odddrupal_update_7106() {
  if (!module_exists('poolbar')) {
    module_enable(array('poolbar'));
  }
}

/**
 * Enable Sushi module, and set some default Views settings.
 */
function odddrupal_update_7107() {
  if (!module_exists('sushi')) {
    module_enable(array('sushi'));
  }

  variable_set('views_show_additional_queries', 0);
  variable_set('views_ui_always_live_preview', 0);
  variable_set('views_ui_show_advanced_column', 1);
  variable_set('views_ui_show_advanced_help_warning', 0);
  variable_set('views_ui_show_listing_filters', 1);
  variable_set('views_ui_show_master_display', 1);
  variable_set('views_ui_show_performance_statistics', 0);
  variable_set('views_ui_show_preview_information', 0);
  variable_set('views_ui_show_sql_query', 0);
}

/**
 * Enable Admin menu toolbar, and configure the settings.
 */
function odddrupal_update_7108() {
  if (!module_exists('admin_menu_toolbar')) {
    module_enable(array('admin_menu_toolbar'));
  }

  variable_set('admin_menu_position_fixed', 1);
  variable_set('admin_menu_tweak_permissions', 1);
}

/**
 * Enable DS and DS Extras.
 */
function odddrupal_update_7109() {
  if (!module_exists('ds')) {
    module_enable(array('ds'));
  }

  if (!module_exists('ds_extras')) {
    module_enable(array('ds_extras'));
  }
}

/**
 * Disable the collapsed permission page.
 */
function odddrupal_update_7110() {
  variable_set('admin_menu_tweak_permissions', 0);
}

/**
 * Enable the Field Word Boundary module.
 */
function odddrupal_update_7111() {
  if (!module_exists('field_word_boundary')) {
    module_enable(array('field_word_boundary'));
  }
}

/**
 * Enable the Features Tools module, and set the default settings.
 */
function odddrupal_update_7112() {
  if (!module_exists('features_tools')) {
    module_enable(array('features_tools'));
  }

  variable_set('features_tools_disable_features_page_js', 1);
}

/**
 * Allow anonymous and authenticated users to access devel information.
 */
function odddrupal_update_7113() {
  if (module_exists('devel')) {
    user_role_grant_permissions(1, array(
      'access devel information',
    ));
    user_role_grant_permissions(2, array(
      'access devel information',
    ));
  }
}

/**
 * Features Tools has changed name from features_tools to ftools. Enable the
 * new module and set its variables.
 */
function odddrupal_update_7114() {
  if (!module_exists('ftools')) {
    module_enable(array('ftools'));
    variable_set('ftools_disable_features_page_js', variable_get('features_tools_disable_features_page_js', 1));
    variable_del('features_tools_disable_features_page_js');
  }
}

/**
 * Enable the Context Condition Theme module.
 */
function odddrupal_update_7115() {
  if (!module_exists('context_condition_theme')) {
    module_enable(array('context_condition_theme'));
  }
}

/**
 * Enable the Tower of Babel module.
 */
function odddrupal_update_7116() {
  if (!module_exists('tower_of_babel')) {
    module_enable(array('tower_of_babel'));
  }
}

/**
 * Add the cron interval setting to the development environment for Tadaa!, and
 * set its initial value if the current environment is development.
 */
function odddrupal_update_7117() {
  $variables = variable_get('tadaa_development_variables', array());
  if (!$variables['cron_safe_threshold']) {
    $variables['cron_safe_threshold'] = '0';
    variable_set('tadaa_development_variables', $variables);
    if (variable_get('tadaa_environment') == 'development') {
      variable_set('cron_safe_threshold', '0');
    }
  }
}

/**
 * Activate Theme Developer and configure it for Tadaa!
 */
function odddrupal_update_7118() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!$modules['devel_themer']) {
    $modules['devel_themer'] = 1;
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (!$modules['devel_themer']) {
    $modules['devel_themer'] = 0;
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (!$modules['devel_themer']) {
    $modules['devel_themer'] = 0;
    variable_set('tadaa_production_modules', $modules);
  }

  if (variable_get('tadaa_environment') == 'development' && !module_exists('devel_themer')) {
    module_enable(array('devel_themer'));
  }
}

/**
 * Sets Eight as the default administration theme.
 */
function odddrupal_update_7119() {
  if (variable_get('admin_theme') == 'seven') {
    variable_set('admin_theme', 'eight');
  }
}

/**
 * Enable the Views Bulk Operations module.
 */
function odddrupal_update_7120() {
  if (!module_exists('views_bulk_operations')) {
    module_enable(array('views_bulk_operations'));
  }
}

/**
 * Activate Backup and Migrate and Treadmill and configure it with Tadaa!
 */
function odddrupal_update_7121() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!$modules['backup_migrate']) {
    $modules['backup_migrate'] = 0;
  }
  if (!$modules['treadmill']) {
    $modules['treadmill'] = 0;
  }
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  if (!$modules['backup_migrate']) {
    $modules['backup_migrate'] = 0;
  }
  if (!$modules['treadmill']) {
    $modules['treadmill'] = 0;
  }
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  if (!$modules['backup_migrate']) {
    $modules['backup_migrate'] = 1;
  }
  if (!$modules['treadmill']) {
    $modules['treadmill'] = 1;
  }
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'production' && (!module_exists('backup_migrate') || !module_exists('treadmill'))) {
    module_enable(array('backup_migrate', 'treadmill'));
  }
}

/**
 * Activate Stage file proxy and configure it with Tadaa!
 */
function odddrupal_update_7122() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!$modules['stage_file_proxy']) {
    $modules['stage_file_proxy'] = 1;
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (!$modules['stage_file_proxy']) {
    $modules['stage_file_proxy'] = 1;
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (!$modules['stage_file_proxy']) {
    $modules['stage_file_proxy'] = 0;
    variable_set('tadaa_production_modules', $modules);
  }

  if (in_array(variable_get('tadaa_environment'), array('development', 'staging')) && !module_exists('stage_file_proxy')) {
    module_enable(array('stage_file_proxy'));
  }
}

/**
 * Enable Treadmill for the staging environment.
 */
function odddrupal_update_7123() {
  $modules = variable_get('tadaa_staging_modules', array());
  $modules['treadmill'] = 1;
  variable_set('tadaa_staging_modules', $modules);

  if (variable_get('tadaa_environment') == 'staging' && !module_exists('treadmill')) {
    module_enable(array('treadmill'));
  }
}

/**
 * Enable Letmein for the development and staging environments.
 */
function odddrupal_update_7125() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['bad_judgement'] = 1;
  $modules['letmein'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['bad_judgement'] = 1;
  $modules['letmein'] = 1;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['bad_judgement'] = 0;
  $modules['letmein'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (in_array(variable_get('tadaa_environment'), array('development', 'staging'))) {
    module_enable(array('letmein'));
  }
}

/**
 * Remove Bad Judgement from the Tadaa! settings.
 */
function odddrupal_update_7126() {
  $modules = variable_get('tadaa_development_modules', array());
  if (isset($modules['bad_judgement'])) {
    unset($modules['bad_judgement']);
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (isset($modules['bad_judgement'])) {
    unset($modules['bad_judgement']);
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (isset($modules['bad_judgement'])) {
    unset($modules['bad_judgement']);
    variable_set('tadaa_production_modules', $modules);
  }
}

/**
 * Make the language prefix in the url lighter than the user language for the
 * language negotiation settings.
 */
function odddrupal_update_7127() {
  // Include the required files.
  require_once DRUPAL_ROOT . '/includes/language.inc';
  require_once DRUPAL_ROOT . '/includes/locale.inc';

  // Set up the enabled negotiation providers and their weight.
  $enabled = array(
    LOCALE_LANGUAGE_NEGOTIATION_URL => -10,
    LOCALE_LANGUAGE_NEGOTIATION_USER => -9,
    LANGUAGE_NEGOTIATION_DEFAULT => 10,
  );

  // Iterate through every available provider, so that we can get the required
  // info and set the weights.
  $providers = language_negotiation_info();
  $weight = $enabled;
  foreach ($providers as $provider => &$data) {
    if (isset($enabled[$provider])) {
      // This provider is provided in the enabled array, set the weight that we
      // have provided.
      $data['weight'] = $enabled[$provider];
    }
    else {
      // This provider shouldn't be enabled, remove it and set its weight to 0.
      $weight[$provider] = 0;
      unset($providers[$provider]);
    }
  }

  // Set the negotiation settings and the weights.
  language_negotiation_set(LANGUAGE_TYPE_INTERFACE, $providers);
  variable_set('locale_language_providers_weight_' . LANGUAGE_TYPE_INTERFACE, $weight);
}

/**
 * Enable and configure Administration language module.
 */
function odddrupal_update_7128() {
  // Enable the module.
  module_enable(array('admin_language'));

  // Set the variables.
  variable_set('admin_language_default', 'en');
  variable_set('admin_language_hide_node', '1');
  variable_set('admin_language_hide_user', '1');
  variable_set('admin_language_translate_admin_menu', '1');
}

/**
 * Don't display errors for the staging environment.
 */
function odddrupal_update_7129() {
  $variables = variable_get('tadaa_staging_variables', array());
  if (isset($variables['error_level'])) {
    $variables['error_level'] = '0';
    variable_set('tadaa_staging_variables', $variables);
  }

  if (variable_get('tadaa_environment') == 'staging') {
    variable_set('error_level', '0');
  }
}

/**
 * Configure Module filter module.
 */
function odddrupal_update_7130() {
  // Set the variables.
  variable_set('module_filter_count_enabled', 1);
  variable_set('module_filter_dynamic_save_position', 1);
  variable_set('module_filter_hide_empty_tabs', 0);
  variable_set('module_filter_remember_update_state', 0);
  variable_set('module_filter_set_focus', 1);
  variable_set('module_filter_tabs', 1);
  variable_set('module_filter_track_recent_modules', 0);
  variable_set('module_filter_use_switch', 0);
  variable_set('module_filter_use_url_fragment', 0);
  variable_set('module_filter_visual_aid', 1);
}

/**
 * Enable the Fast Permissions Administration module.
 */
function odddrupal_update_7131() {
  // Enable the module.
  module_enable(array('fpa'));
}

/**
 * Remove Theme Developer from the Tadaa! settings.
 */
function odddrupal_update_7132() {
  $modules = variable_get('tadaa_development_modules', array());
  if ($modules['devel_themer']) {
    unset($modules['devel_themer']);
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if ($modules['devel_themer']) {
    unset($modules['devel_themer']);
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if ($modules['devel_themer']) {
    unset($modules['devel_themer']);
    variable_set('tadaa_production_modules', $modules);
  }
}

/**
 * Remove jQuery compression level from the Tadaa! settings, and set it to
 * minified from Google's CDN.
 */
function odddrupal_update_7133() {
  $variables = variable_get('tadaa_development_variables', array());
  if ($variables['jquery_update_compression_type']) {
    unset($variables['jquery_update_compression_type']);
    variable_set('tadaa_development_variables', $variables);
  }

  $variables = variable_get('tadaa_staging_variables', array());
  if ($variables['jquery_update_compression_type']) {
    unset($variables['jquery_update_compression_type']);
    variable_set('tadaa_staging_variables', $variables);
  }

  $variables = variable_get('tadaa_production_variables', array());
  if ($variables['jquery_update_compression_type']) {
    unset($variables['jquery_update_compression_type']);
    variable_set('tadaa_production_variables', $variables);
  }

  variable_set('jquery_update_compression_type', 'min');
  variable_set('jquery_update_jquery_cdn', 'google');
  variable_set('jquery_update_jquery_version', '1.5');
}

/**
 * Sets a default value for the install_language variable.
 */
function odddrupal_update_7134() {
  $languages = language_list('weight');

  if (count($languages) == 2 && key($languages[0]) == 'sv') {
    // There are two languages for this site, with Swedish as the default.
    variable_set('install_language', 'sv');
  }
  else {
    // In other scenarios, assume english.
    variable_set('install_language', 'en');
  }
}

/**
 * Remove simpledom API module from the Tadaa! settings.
 */
function odddrupal_update_7135() {
  $modules = variable_get('tadaa_development_modules', array());
  if ($modules['simplehtmldom']) {
    unset($modules['simplehtmldom']);
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if ($modules['simplehtmldom']) {
    unset($modules['simplehtmldom']);
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if ($modules['simplehtmldom']) {
    unset($modules['simplehtmldom']);
    variable_set('tadaa_production_modules', $modules);
  }
}

/**
 * Remove Metatag UI module from the Tadaa! settings. This has been deprecated.
 */
function odddrupal_update_7136() {
  $modules = variable_get('tadaa_development_modules', array());
  if ($modules['metatag_ui']) {
    unset($modules['metatag_ui']);
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if ($modules['metatag_ui']) {
    unset($modules['metatag_ui']);
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if ($modules['metatag_ui']) {
    unset($modules['metatag_ui']);
    variable_set('tadaa_production_modules', $modules);
  }
}

/**
 * Disable the Use administration language in the administration menu setting
 * for Administration Language.
 */
function odddrupal_update_7137() {
  variable_del('admin_language_translate_admin_menu');
}

/**
 * Sets the jQuery version to 1.5 för administration pages.
 */
function odddrupal_update_7138() {
  variable_set('jquery_update_jquery_admin_version', '1.5');
}

/**
 * Change the db log row limit to 10.000 for the production environment.
 */
function odddrupal_update_7139() {
  $variables = variable_get('tadaa_production_variables', array());
  $variables['dblog_row_limit'] = '10000';
  variable_set('tadaa_production_variables', $variables);

  if (variable_get('tadaa_environment') == 'production') {
    variable_set('dblog_row_limit', '10000');
  }
}

/**
 * Enable and configure jReject.
 */
function odddrupal_update_7140() {
  module_enable(array('jreject'));

  variable_set('jreject_browser_alternatives', array(
    'msie' => 0,
    'firefox' => 1,
    'safari' => 1,
    'opera' => 0,
    'chrome' => 1,
    'gcf' => 0,
  ));
  variable_set('jreject_browser_config', array(
    'msie' => array('5' => 1, '6' => 1, '7' => 1, '8' => 0, '9' => 0, '10' => 0),
    'firefox' => array(),
    'chrome' => array(),
    'safari' => array(),
    'opera' => array(),
  ));
  variable_set('jreject_enable', 1);
}

/**
 * Use the administration language for the administration menu.
 */
function odddrupal_update_7141() {
  variable_set('admin_language_translate_admin_menu', 1);
}


/**
 * Don't use the administration language for the administration menu, due to a
 * bug...
 */
function odddrupal_update_7142() {
  variable_del('admin_language_translate_admin_menu');
}

/**
 * Remove Backup & Migrate and the Treadmill module from the Tadaa!
 * configuration.
 */
function odddrupal_update_7143() {
  $modules = variable_get('tadaa_development_modules', array());
  if (isset($modules['backup_migrate'])) {
    unset($modules['backup_migrate']);
  }
  if (isset($modules['treadmill'])) {
    unset($modules['treadmill']);
  }
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  if (isset($modules['backup_migrate'])) {
    unset($modules['backup_migrate']);
  }
  if (isset($modules['treadmill'])) {
    unset($modules['treadmill']);
  }
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  if (isset($modules['backup_migrate'])) {
    unset($modules['backup_migrate']);
  }
  if (isset($modules['treadmill'])) {
    unset($modules['treadmill']);
  }
  variable_set('tadaa_production_modules', $modules);
}

/**
 * Add Backup & Migrate to the production environment using Tadaa!
 */
function odddrupal_update_7144() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!isset($modules['backup_migrate'])) {
    $modules['backup_migrate'] = 0;
    variable_set('tadaa_development_modules', $modules);
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (!isset($modules['backup_migrate'])) {
    $modules['backup_migrate'] = 0;
    variable_set('tadaa_staging_modules', $modules);
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (!isset($modules['backup_migrate'])) {
    $modules['backup_migrate'] = 1;
    variable_set('tadaa_production_modules', $modules);
  }
}

/**
 * Enable Masquerade and Masquerade Views modules.
 */
function odddrupal_update_7145() {
  module_enable(array('masquerade', 'masquerade_views'));
}

/**
 * Save the origin for Stage File Proxy to the database.
 */
function odddrupal_update_7146() {
  if ($value = variable_get('stage_file_proxy_origin')) {
    variable_set('stage_file_proxy_origin', $value);
  }
}

/**
 * Disable the Field UI for the production environment.
 */
function odddrupal_update_7147() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!isset($modules['field_ui'])) {
    $modules['field_ui'] = 1;
    variable_set('tadaa_development_modules', $modules);

    if (!module_exists('field_ui') && variable_get('tadaa_environment') == 'development') {
      module_enable(array('field_ui'));
    }
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (!isset($modules['field_ui'])) {
    $modules['field_ui'] = 1;
    variable_set('tadaa_staging_modules', $modules);

    if (!module_exists('field_ui') && variable_get('tadaa_environment') == 'staging') {
      module_enable(array('field_ui'));
    }
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (!isset($modules['field_ui'])) {
    $modules['field_ui'] = 0;
    variable_set('tadaa_production_modules', $modules);

    if (module_exists('field_ui') && variable_get('tadaa_environment') == 'production') {
      module_disable(array('field_ui'), FALSE);
    }
  }
}

/**
 * Disable the Overlay module.
 */
function odddrupal_update_7148() {
  if (module_exists('overlay')) {
    module_disable(array('overlay'));
  }
}

/**
 * Disable the Update manager for the staging and production environments.
 */
function odddrupal_update_7149() {
  $modules = variable_get('tadaa_development_modules', array());
  if (!isset($modules['update'])) {
    $modules['update'] = 1;
    variable_set('tadaa_development_modules', $modules);

    if (!module_exists('update') && variable_get('tadaa_environment') == 'development') {
      module_enable(array('update'));
    }
  }

  $modules = variable_get('tadaa_staging_modules', array());
  if (!isset($modules['update'])) {
    $modules['update'] = 0;
    variable_set('tadaa_staging_modules', $modules);

    if (module_exists('update') && variable_get('tadaa_environment') == 'staging') {
      module_disable(array('update'));
    }
  }

  $modules = variable_get('tadaa_production_modules', array());
  if (!isset($modules['update'])) {
    $modules['update'] = 0;
    variable_set('tadaa_production_modules', $modules);

    if (module_exists('update') && variable_get('tadaa_environment') == 'production') {
      module_disable(array('update'), FALSE);
    }
  }
}

/**
 * Extend the ThemeKey rule for /user to not activate for anonymous users.
 *
 * This will only extend the rule if one can be found, nothing will happen
 * otherwise.
 */
function odddrupal_update_7150() {
  module_load_include('inc', 'themekey', 'themekey_build');

  foreach (themekey_load_rules() as $rule) {
    // Add a new rule as a children to this rule, if this rule is the one that
    // activates the administration theme for the /user path.
    if ($rule['property'] == 'drupal:path' && $rule['value'] == 'user' && $rule['theme'] == 'ThemeKeyAdminTheme') {
      $new_rule = array(
        'property' => 'user:role',
        'operator' => '!',
        'value' => 'anonymous user',
        'theme' => 'ThemeKeyAdminTheme',
        'enabled' => 1,
        'parent' => $rule['id'],
        'weight' => 0,
      );
      themekey_rule_set($new_rule);

      // Don't look for anymore rules.
      break;
    }
  }
}

/**
 * Enable the Search Krumo module for the development environment.
 */
function odddrupal_update_7151() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['search_krumo'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['search_krumo'] = 0;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['search_krumo'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'development') {
    module_enable(array('search_krumo'));
  }
}

/**
 * Change the jQuery back-end version to the Drupal default.
 */
function odddrupal_update_7152() {
  variable_set('jquery_update_jquery_admin_version', 'default');
}

/**
 * Set the Views query statistic settings.
 */
function odddrupal_update_7153() {
  variable_set('views_ui_show_performance_statistics', 1);
  variable_set('views_ui_show_preview_information', 1);
  variable_set('views_ui_show_sql_query', 1);
}

/**
 * Enable the Embed views display.
 */
function odddrupal_update_7154() {
  variable_set('views_ui_display_embed', 1);
}

/**
 * Apply new configuraiton for Devel.
 */
function odddrupal_update_7155() {
  variable_set('devel_error_handlers', array(1 => '1', 2 => '2'));
  variable_set('devel_memory', 1);
  variable_set('dev_timer', 1);
}

/**
 * Enable the Devel Debug Log module for the development environment.
 */
function odddrupal_update_7156() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['devel_debug_log'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['devel_debug_log'] = 0;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['devel_debug_log'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'development') {
    module_enable(array('devel_debug_log'));
  }
}

/**
 * Configure the Logentries module.
 */
function odddrupal_update_7157() {
  variable_set('logentries_severity', '7');
}

/**
 * Enable the Logentries module for the production environment.
 */
function odddrupal_update_7158() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['logentries'] = 0;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['logentries'] = 0;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['logentries'] = 1;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'production') {
    module_enable(array('logentries'));
  }
}

/**
 * Disable and uninstall the DBlog module for the production environment.
 */
function odddrupal_update_7159() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['dblog'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['dblog'] = 1;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['dblog'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'production') {
    module_disable(array('dblog'));
    drupal_uninstall_modules(array('dblog'));
  }
}

/**
 * Enable the Context List Active module for the development and staging environment.
 */
function odddrupal_update_7160() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['context_list'] = 1;
  $modules['context_list_active'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['context_list'] = 1;
  $modules['context_list_active'] = 1;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['context_list'] = 0;
  $modules['context_list_active'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'development' || variable_get('tadaa_environment') == 'staging') {
    module_enable(array('context_list'));
    module_enable(array('context_list_active'));
  }
}

/**
 * Set the default path for features export.
 */
function odddrupal_update_7161() {
  variable_set('features_default_export_path', 'sites/all/modules/features');
}

/**
 * Enable the Devel Form Debug module for the development environment.
 */
function odddrupal_update_7162() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['devel_form_debug'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['devel_form_debug'] = 0;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['devel_form_debug'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'development') {
    module_enable(array('devel_form_debug'));

    // Grant permissions for anonymous and authenticated.
    user_role_grant_permissions(1, array('access devel form debug contextual links'));
    user_role_grant_permissions(2, array('access devel form debug contextual links'));
  }
}

/**
 * Enable the XHProf module for the development environment.
 */
function odddrupal_update_7163() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['xhprof'] = 1;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['xhprof'] = 0;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['xhprof'] = 0;
  variable_set('tadaa_production_modules', $modules);

  if (variable_get('tadaa_environment') == 'development') {
    module_enable(array('xhprof'));

    // Grant permissions for anonymous and authenticated.
    user_role_grant_permissions(1, array('access xhprof data'));
    user_role_grant_permissions(2, array('access xhprof data'));

    // Enable profiling.
    variable_set('xhprof_enabled', 1);
  }
}

/**
 * Enable the Security Review module for staging and production.
 */
function odddrupal_update_7164() {
  $modules = variable_get('tadaa_development_modules', array());
  $modules['security_review'] = 0;
  variable_set('tadaa_development_modules', $modules);

  $modules = variable_get('tadaa_staging_modules', array());
  $modules['security_review'] = 1;
  variable_set('tadaa_staging_modules', $modules);

  $modules = variable_get('tadaa_production_modules', array());
  $modules['security_review'] = 1;
  variable_set('tadaa_production_modules', $modules);

  if (in_array(variable_get('tadaa_environment'), array('staging', 'production'))) {
    module_enable(array('security_review'));
    variable_set('security_review_base_url_method', 'include');
  }
}
